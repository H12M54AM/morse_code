/**
 * morse_code main file
 * 
 * Generated by ChatGBT
 * Slighty modified by Edward
 * Dec 29, 2022
 */

use std::io;

fn main() {
    let morse_code = create_morse_code_map(); // Define morse_code in the main function's scope

    // let input = "HELLO WORLD";
    // Read user input
    println!("Enter some text to convert to Morse code:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).unwrap();

    let output = text_to_morse(&input, &morse_code); // Pass morse_code as a reference to the text_to_morse function
    // Print the result
    println!("\nMorse code: {}", output);
}

fn create_morse_code_map() -> std::collections::HashMap<char, &'static str> {
    let mut map = std::collections::HashMap::new(); // Define map in the create_morse_code_map function's scope

    map.insert('A', ".-");
    map.insert('B', "-...");
    map.insert('C', "-.-.");
    map.insert('D', "-..");
    map.insert('E', ".");
    map.insert('F', "..-.");
    map.insert('G', "--.");
    map.insert('H', "....");
    map.insert('I', "..");
    map.insert('J', ".---");
    map.insert('K', "-.-");
    map.insert('L', ".-..");
    map.insert('M', "--");
    map.insert('N', "-.");
    map.insert('O', "---");
    map.insert('P', ".--.");
    map.insert('Q', "--.-");
    map.insert('R', ".-.");
    map.insert('S', "...");
    map.insert('T', "-");
    map.insert('U', "..-");
    map.insert('V', "...-");
    map.insert('W', ".--");
    map.insert('X', "-..-");
    map.insert('Y', "-.--");
    map.insert('Z', "--..");

    map // Return map to the caller
}

fn text_to_morse(input: &str, morse_code: &std::collections::HashMap<char, &'static str>) -> String {
    let mut output = String::new(); // Define output in the text_to_morse function's scope

    for c in input.chars() {
        output.push_str(morse_code.get(&c.to_ascii_uppercase()).unwrap_or(&""));
        output.push(' ');
    }
    output // Return output to the caller
}